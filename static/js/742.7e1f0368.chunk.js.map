{"version":3,"file":"static/js/742.7e1f0368.chunk.js","mappings":"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","sources":["webpack://Goose-Track/./src/pages/MainLayout/MainLayout.module.scss?03c3","webpack://Goose-Track/./src/components/Calendar/Calendar.module.scss?6ca2","webpack://Goose-Track/./src/components/DayToolbar/DayToolbar.module.scss?5dc2","components/Calendar/CalendarCalculations/CalendarCalculations.jsx","components/DayToolbar/DayToolbar.jsx","components/DayToolbar/DayToolbarDetail/DayToolbarDetail.jsx","webpack://Goose-Track/./src/components/ColumnHeadBar/ColumnHeadBar.module.scss?97ce","webpack://Goose-Track/./src/components/TaskForm/TaskForm.module.scss?ad61","redux/task/task-selectors.js","components/Loader/LoaderTask.jsx","components/TaskForm/TaskForm.jsx","webpack://Goose-Track/./src/components/TaskList/TaskList.module.scss?30ed","webpack://Goose-Track/./src/components/PriorityList/PriorituList.module.scss?c985","components/PriorityList/PriorityList.jsx","components/TaskList/TaskList.jsx","components/ColumnHeadBar/ColumnHeadBar.jsx","components/Calendar/Calendar.jsx","pages/MainLayout/MainLayout.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapperBGAuthPage\":\"MainLayout_wrapperBGAuthPage__bPFz2\",\"wrapperBGAuthPageDark\":\"MainLayout_wrapperBGAuthPageDark__zFUY0\"};","// extracted by mini-css-extract-plugin\nexport default {\"calendarHeader\":\"Calendar_calendarHeader__ANxjC\",\"calendarColumns\":\"Calendar_calendarColumns__6ZhPO\",\"calendarColumn\":\"Calendar_calendarColumn__oCUL0\",\"calendarColumnDark\":\"Calendar_calendarColumnDark__KA3JH\",\"empty\":\"Calendar_empty__oRaoc\",\"emptyDark\":\"Calendar_emptyDark__J+h95\",\"today\":\"Calendar_today__rw+1q\",\"calendarColumnText\":\"Calendar_calendarColumnText__57HJ7\",\"calendarColumnTextDark\":\"Calendar_calendarColumnTextDark__VNGjG\",\"BtnWrapper\":\"Calendar_BtnWrapper__uwmZB\",\"BtnWrapperDark\":\"Calendar_BtnWrapperDark__IUsES\",\"PrevbtnDark\":\"Calendar_PrevbtnDark__X-ewQ\",\"NextbtnDark\":\"Calendar_NextbtnDark__EBSsX\",\"Prevebtn\":\"Calendar_Prevebtn__+CVHx\",\"Nextbtn\":\"Calendar_Nextbtn__NPfho\",\"btnChangeWrapper\":\"Calendar_btnChangeWrapper__BmaZv\",\"btnChangeMonth\":\"Calendar_btnChangeMonth__l5Fxf\",\"btnChangeMonthCurrentLight\":\"Calendar_btnChangeMonthCurrentLight__aImpN\",\"btnChangeMonthCurrent\":\"Calendar_btnChangeMonthCurrent__VPMo9\",\"btnChangeMonthDark\":\"Calendar_btnChangeMonthDark__WE+rU\",\"btnChangeDay\":\"Calendar_btnChangeDay__ueiVj\",\"btnChangeDayCurrentLight\":\"Calendar_btnChangeDayCurrentLight__x+J0h\",\"btnChangeDayCurrent\":\"Calendar_btnChangeDayCurrent__wb6AR\",\"btnChangeDayDark\":\"Calendar_btnChangeDayDark__2Xzhl\",\"TaskNumber\":\"Calendar_TaskNumber__zaX-u\"};","// extracted by mini-css-extract-plugin\nexport default {\"DayToolbarWrapper\":\"DayToolbar_DayToolbarWrapper__Zsy0f\",\"Day\":\"DayToolbar_Day__tvYLV\",\"DayDetail\":\"DayToolbar_DayDetail__Bnlv+\",\"DayLargeScr\":\"DayToolbar_DayLargeScr__9WLBv\",\"DayToolbarWrapperDark\":\"DayToolbar_DayToolbarWrapperDark__cbUJ0\",\"DayDark\":\"DayToolbar_DayDark__n6KW9\",\"WrapperDetail\":\"DayToolbar_WrapperDetail__87Lq2\",\"DayLargeScrDark\":\"DayToolbar_DayLargeScrDark__qbVtS\",\"DayDetailDark\":\"DayToolbar_DayDetailDark__VcnVR\",\"Number\":\"DayToolbar_Number__NdU3p\",\"NumberDark\":\"DayToolbar_NumberDark__xayge\",\"NumberCurrent\":\"DayToolbar_NumberCurrent__MJfsD\",\"NumberCurrentDark\":\"DayToolbar_NumberCurrentDark__RywZs\"};","let date = new Date();\n\nexport const getYear = () => {\n  return date.getFullYear();\n};\n\nexport const getToday = () => {\n  return new Date();\n};\nexport const getDaysInMonth = (year, month) => {\n  return new Date(year, month + 1, 0).getDate();\n};\n\nexport const getDayOfWeek = () => {};\nexport const getMonth = () => {\n  return date.getMonth();\n};\n\n\n","import Style from './DayToolbar.module.scss';\nimport { useMediaQuery } from 'react-responsive';\nimport { useSelector } from 'react-redux';\n\nexport const DayToolbar = ({ element }) => {\n  const theme = useSelector(state => state.theme.value);\n\n  const isMediumScreen = useMediaQuery({ minWidth: 320, maxWidth: 767 });\n  const isLargeScreen = useMediaQuery({ minWidth: 768 });\n  return (\n    <div\n      className={theme ? Style.DayToolbarWrapper : Style.DayToolbarWrapperDark}\n    >\n      {isMediumScreen && (\n        <>\n          <p className={theme ? Style.Day : Style.DayDark}>M</p>\n          <p className={theme ? Style.Day : Style.DayDark}>T</p>\n          <p className={theme ? Style.Day : Style.DayDark}>W</p>\n          <p className={theme ? Style.Day : Style.DayDark}>T</p>\n          <p className={theme ? Style.Day : Style.DayDark}>F</p>\n          <p className={theme ? Style.Day : Style.DayDark}>S</p>\n          <p className={theme ? Style.Day : Style.DayDark}>S</p>\n        </>\n      )}\n      {isLargeScreen && (\n        <>\n          <p className={theme ? Style.DayLargeScr : Style.DayLargeScrDark}>MON</p>\n          <p className={theme ? Style.DayLargeScr : Style.DayLargeScrDark}>TUE</p>\n          <p className={theme ? Style.DayLargeScr : Style.DayLargeScrDark}>WED</p>\n          <p className={theme ? Style.DayLargeScr : Style.DayLargeScrDark}>THU</p>\n          <p className={theme ? Style.DayLargeScr : Style.DayLargeScrDark}>FRI</p>\n          <p className={theme ? Style.DayLargeScr : Style.DayLargeScrDark}>SAT</p>\n          <p className={theme ? Style.DayLargeScr : Style.DayLargeScrDark}>SUN</p>\n        </>\n      )}\n    </div>\n  );\n};\n","import Style from '../DayToolbar.module.scss';\nimport { useMediaQuery } from 'react-responsive';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\n\nexport const DayToolbarDetail = ({ day, month,setCurrentBtnMonth}) => {\n  setCurrentBtnMonth(false)\n  const [selectedDay, setSelectedDay] = useState(null);\n\nif(!day && !month) {\n   day = new Date().getDate()\n   month = new Date().getMonth() + 1\n}\n  const isMediumScreen = useMediaQuery({ minWidth: 320, maxWidth: 767 });\n  const theme = useSelector(state => state.theme.value);\n\n function formatDayOfWeek(day) {\n  if (isMediumScreen) {\n    const daysOfWeek = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n    return daysOfWeek[day];\n  } else {\n    const daysOfWeek = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\n    return daysOfWeek[day];\n  }\n}\n\n\n  function getDaysInMonth(month, year) {\n    return new Date(year, month, 0).getDate();\n  }\n\nfunction getDateOfWeek(day, month) {\n  const year = new Date().getFullYear();\n  const daysInMonth = getDaysInMonth(month, year);\n  const date = new Date(year, month - 1, day);\n  const dayOfWeek = date.getDay();\n\n  const monday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n  monday.setDate(date.getDate() - dayOfWeek + 1);\n\n  // Если день недели является воскресеньем, отобразить прошлую неделю\n  if (dayOfWeek === 0) {\n    monday.setDate(monday.getDate() - 7);\n  }\n\n  const weekDates = [];\n  for (let i = 0; i < 7; i++) {\n    const nextDay = new Date(monday);\n    nextDay.setDate(monday.getDate() + i);\n    if (\n      nextDay.getMonth() + 1 === month &&\n      nextDay.getDate() <= daysInMonth\n    ) {\n      weekDates.push(nextDay);\n    } else if (\n      nextDay.getMonth() + 1 === month + 1 &&\n      nextDay.getDate() <= daysInMonth + 7\n    ) {\n      weekDates.push(nextDay);\n    } else if (\n      nextDay.getMonth() + 1 === month - 1 &&\n      nextDay.getDate() <= daysInMonth + 7\n    ) {\n      weekDates.push(nextDay);\n    }\n  }\n\n  const formattedDates = weekDates.map((date) => {\n    const dayOfWeek = formatDayOfWeek(date.getDay());\n    const day = date.getDate();\n\n    return { dayOfWeek, day };\n  });\n\n  return formattedDates;\n}\n  const currentDate = new Date().getDate();\n  const weekDates = getDateOfWeek(day, month + 1);\n\nfunction handleDateClick(day) {\n  setSelectedDay(day);\n  }\n  \n  return (\n    <div\n      className={theme ? Style.DayToolbarWrapper : Style.DayToolbarWrapperDark}\n    >\n      {weekDates.map(date => (\n        <div\n          onClick={() => handleDateClick(date.day)}\n          key={date.day}\n          className={Style.WrapperDetail}\n        >\n          <span className={theme ? Style.DayDetail : Style.DayDetailDark}>\n            {date.dayOfWeek}\n          </span>\n         {currentDate === date.day ? (\n       <span\n              className={theme ? Style.NumberCurrent : Style.NumberCurrentDark}\n            >\n              {date.day}\n            </span>\n    ) : (\n      <span className={selectedDay === date.day ? (theme ? Style.NumberCurrent : Style.NumberCurrentDark) : (theme ? Style.Number : Style.NumberDark)}>\n        {date.day}\n      </span>\n    )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ColumnHeadBar\":\"ColumnHeadBar_ColumnHeadBar__cMEHt\",\"ColumnHeadBarDark\":\"ColumnHeadBar_ColumnHeadBarDark__SoVML\",\"wrapperTask\":\"ColumnHeadBar_wrapperTask__-w0PW\",\"wrapperTaskDark\":\"ColumnHeadBar_wrapperTaskDark__FAlmf\",\"wrappertitle\":\"ColumnHeadBar_wrappertitle__NExYd\",\"taskTitle\":\"ColumnHeadBar_taskTitle__qhpW1\",\"taskTitleDark\":\"ColumnHeadBar_taskTitleDark__9bBN9\",\"taskBtn\":\"ColumnHeadBar_taskBtn__Mw7YP\",\"taskBtnDark\":\"ColumnHeadBar_taskBtnDark__znEsA\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapperTaskModal\":\"TaskForm_wrapperTaskModal__hXpVB\",\"TaskModalDark\":\"TaskForm_TaskModalDark__IMGuv\",\"TaskModal\":\"TaskForm_TaskModal__HaH9e\",\"CloseModalDark\":\"TaskForm_CloseModalDark__uumez\",\"CloseModal\":\"TaskForm_CloseModal__OcLys\",\"Form\":\"TaskForm_Form__EN+ow\",\"TitleInput\":\"TaskForm_TitleInput__pv-rb\",\"TitleInputError\":\"TaskForm_TitleInputError__kq0si\",\"TitleInputDark\":\"TaskForm_TitleInputDark__vGhCJ\",\"TitleInputDarkError\":\"TaskForm_TitleInputDarkError__x6O44\",\"Notification\":\"TaskForm_Notification__Exefx\",\"PositionTimeInput\":\"TaskForm_PositionTimeInput__RD2Nw\",\"wrapperTime\":\"TaskForm_wrapperTime__W+T0O\",\"TimeInput\":\"TaskForm_TimeInput__0RYbZ\",\"TimeInputError\":\"TaskForm_TimeInputError__GBYVO\",\"TimeInputDark\":\"TaskForm_TimeInputDark__8OgJu\",\"TimeInputDarkError\":\"TaskForm_TimeInputDarkError__0r89V\",\"FormText\":\"TaskForm_FormText__ur3Cq\",\"FormTextDark\":\"TaskForm_FormTextDark__xzqUh\",\"WrapperCheckbox\":\"TaskForm_WrapperCheckbox__O6KQd\",\"CheckboxText\":\"TaskForm_CheckboxText__7Ca0c\",\"CheckboxTextDark\":\"TaskForm_CheckboxTextDark__5Z23b\",\"CheckboxLabel\":\"TaskForm_CheckboxLabel__Fw29y\",\"checkboxCustomLow\":\"TaskForm_checkboxCustomLow__Rraeg\",\"CheckboxLow\":\"TaskForm_CheckboxLow__Yl5VJ\",\"checkboxCustomMedium\":\"TaskForm_checkboxCustomMedium__FHWb2\",\"CheckboxMedium\":\"TaskForm_CheckboxMedium__vTrDZ\",\"checkboxCustomHigh\":\"TaskForm_checkboxCustomHigh__zw2ve\",\"CheckboxHigh\":\"TaskForm_CheckboxHigh__IAk1C\",\"wrapperBtn\":\"TaskForm_wrapperBtn__H+z6l\",\"btnAdd\":\"TaskForm_btnAdd__OvpmD\",\"btnCencel\":\"TaskForm_btnCencel__WIfLW\",\"btnCencelDark\":\"TaskForm_btnCencelDark__vqgik\"};","// export const isUserLogin = ({auth}) => auth.isLogin;\nexport const getTask = ({tasks}) => {\n    const {items,loading } = tasks;\n    return {items,loading};\n}\n// export const getUser = ({ auth }) => auth.user;","import \"./loader.scss\"\n\nimport { useSelector } from 'react-redux';\nimport { getTask } from '../../redux/task/task-selectors';\nimport { useEffect } from 'react';\nexport const LoaderTask = ({setTaskModal}) => {\n\n    const theme = useSelector(state => state.theme.value);\n    const { loading } = useSelector(getTask);\n\n    useEffect(() => {\n    if (!loading) {\n      const timer = setTimeout(() => {\n        setTaskModal(false);\n      }, 1000);\n\n      return () => clearTimeout(timer);\n    }\n    }, [loading, setTaskModal]);\n    \n  return <div className={!theme ?  \"wrapperLoader\" : \"wrapperLoaderDark\"}>{loading ? <div className={!theme ? \"spinner\" : \"spinnerDark\"}></div> : <div className={!theme ? \"check-animation\" : \"check-animationDark\"}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"60\" height=\"60\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"#3E85F3\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n                  <polyline points=\"9 15 12 18 20 10\" />\n                </svg>\n              </div>}</div>\n}\n","import Style from './TaskForm.module.scss';\nimport { MdOutlineClose } from 'react-icons/md';\nimport { FiPlus } from 'react-icons/fi';\nimport { IconContext } from 'react-icons';\nimport { createPortal } from 'react-dom';\nimport {addTask,edit} from \"../../redux/task/task-operation.js\"\n\nimport {LoaderTask} from \"../Loader/LoaderTask\"\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { CiEdit } from 'react-icons/ci';\nexport const TaskForm = ({ setTaskModal,id, progress, day,titleText,Priority,TimeStart,TimeEnd, month, year, editTask }) => {\n\n  const dispatch = useDispatch();\n\n  const modalRoot = document.getElementById('root');\n  const theme = useSelector(state => state.theme.value);\n  const [send, setSend] = useState(false);\n  const [title, setTitle] = useState(titleText ? titleText : null);\n  const [timeStart, setTimeStart] = useState(TimeStart);\n  const [timeEnd, setTimeEnd] = useState(TimeEnd);\n  const [priority, setPriority] = useState(Priority ? Priority : null);\n  const [required, setRequired] = useState({\n    title: true,\n    timeStart: true,\n    timeEnd: true,\n    priority: true,\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!priority) {\n      setRequired(prevState => ({ ...prevState, priority: false }));\n    } else {\n      setRequired(prevState => ({ ...prevState, priority: true }));\n    }\n\n    if (!timeEnd) {\n      setRequired(prevState => ({ ...prevState, timeEnd: false }));\n    } else {\n      setRequired(prevState => ({ ...prevState, timeEnd: true }));\n    }\n\n    if (!timeStart) {\n      setRequired(prevState => ({ ...prevState, timeStart: false }));\n    } else {\n      setRequired(prevState => ({ ...prevState, timeStart: true }));\n    }\n\n    if (!title) {\n      setRequired(prevState => ({ ...prevState, title: false }));\n    } else {\n      setRequired(prevState => ({ ...prevState, title: true }));\n    }\n\n    if (!title || !timeStart || !timeEnd || !priority ) {\n    return;\n  }\n  \n  const task = {\n  title: title,\n  timeStart: timeStart,\n  timeEnd: timeEnd,\n  priority: priority,\n  progress: progress,\n  day: day.toString(),\n  month: month.toString(),\n  year: year.toString()\n};\n    if (!editTask) {\n      dispatch(addTask(task));\n    }else {\n    dispatch(edit({id,task}));\n    }\n  // setTaskModal(false);\n  setSend(true)\n  };\n\n  \n  return createPortal(\n  <div className={Style.wrapperTaskModal}>\n      <div className={theme ? Style.TaskModal : Style.TaskModalDark}>\n          {!send  ?<> <button\n          onClick={() => setTaskModal(false)}\n          className={theme ? Style.CloseModal : Style.CloseModalDark}\n        >\n          <IconContext.Provider value={{ size: '24px' }}>\n            <MdOutlineClose />\n          </IconContext.Provider>\n        </button>\n       <form className={Style.Form}>\n          <label className={theme ? Style.FormText : Style.FormTextDark}>\n            Title\n          </label>\n          <input\n            type=\"text\"\n            className={\n              theme   \n                ? required.title\n                  ? Style.TitleInput\n                  : Style.TitleInputError\n                : required.title\n                ? Style.TitleInputDark\n                : Style.TitleInputDarkError\n            }\n            placeholder=\"Enter Text\"\n            value={title ? title : \"\"}\n            onChange={e => setTitle(e.target.value)}\n          />\n          <div className={Style.PositionTimeInput}>\n            <div className={Style.wrapperTime}>\n              <label className={theme ? Style.FormText : Style.FormTextDark}>\n                Start\n              </label>\n              <input\n                type=\"time\"\n                className={\n                  theme\n                    ? required.timeStart\n                      ? Style.TimeInput\n                      : Style.TimeInputError\n                    : required.timeStart\n                    ? Style.TimeInputDark\n                    : Style.TimeInputDarkError\n                }\n                onChange={e => setTimeStart(e.target.value)}\n                defaultValue={TimeStart}\n              />\n            </div>\n            <div className={Style.wrapperTime}>\n              <label className={theme ? Style.FormText : Style.FormTextDark}>\n                End\n              </label>\n              <input\n                type=\"time\"\n                className={\n                  theme\n                    ? required.timeEnd\n                      ? Style.TimeInput\n                      : Style.TimeInputError\n                    : required.timeEnd\n                    ? Style.TimeInputDark\n                    : Style.TimeInputDarkError\n                }\n                onChange={e => setTimeEnd(e.target.value)}\n                defaultValue={TimeEnd}\n              />\n            </div>\n          </div>\n          {!required.priority && (\n            <p className={Style.Notification}>Select priority</p>\n          )}\n          <div className={Style.WrapperCheckbox}>\n            <label htmlFor=\"low\" className={Style.CheckboxLabel}>\n              <input\n                type=\"radio\"\n                name=\"priority\"\n                id=\"low\"\n                className={Style.CheckboxLow}\n                onChange={() => setPriority('Low')}\n                required\n                checked={priority === \"Low\"}\n              />\n              <div className={Style.checkboxCustomLow}></div>\n              <p\n                className={theme ? Style.CheckboxText : Style.CheckboxTextDark}\n              >\n                Low\n              </p>\n            </label>\n\n            <label htmlFor=\"medium\" className={Style.CheckboxLabel}>\n              <input\n                type=\"radio\"\n                name=\"priority\"\n                id=\"medium\"\n                className={Style.CheckboxMedium}\n                onChange={() => setPriority('Medium')}\n                required\n                checked={priority === \"Medium\"}\n              />\n              <div className={Style.checkboxCustomMedium}></div>\n              <p\n                className={theme ? Style.CheckboxText : Style.CheckboxTextDark}\n              >\n                Medium\n              </p>\n            </label>\n\n            <label htmlFor=\"high\" className={Style.CheckboxLabel}>\n              <input\n                type=\"radio\"\n                name=\"priority\"\n                id=\"high\"\n                className={Style.CheckboxHigh}\n                onChange={() => setPriority('High')}\n                required\n                checked={priority === \"High\"}\n              />\n              <div className={Style.checkboxCustomHigh}></div>\n              <p\n                className={theme ? Style.CheckboxText : Style.CheckboxTextDark}\n              >\n                High\n              </p>\n            </label>\n          </div>\n          <div className={Style.wrapperBtn}>\n            <button\n              onClick={handleSubmit}\n              type=\"submit\"\n              className={Style.btnAdd}\n            >\n              <IconContext.Provider value={{ size: '18px' }}>\n                  {!editTask ? <FiPlus /> : <CiEdit />}\n                </IconContext.Provider>\n                {!editTask ? \"Add\" : \"Edit\"}\n              \n            </button>\n            <button\n              className={theme ? Style.btnCencel : Style.btnCencelDark}\n              onClick={() => setTaskModal(false)}\n            >\n              Cancel\n            </button>\n          </div>\n          </form></> : <LoaderTask setTaskModal={setTaskModal} />} \n      </div>\n    </div>,\n    modalRoot\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"allTask\":\"TaskList_allTask__p7D6D\",\"allTaskDark\":\"TaskList_allTaskDark__aWICO\",\"TaskWrapper\":\"TaskList_TaskWrapper__VWHDG\",\"TaskWrapperDark\":\"TaskList_TaskWrapperDark__q0OPv\",\"TitlTask\":\"TaskList_TitlTask__yAMpl\",\"wrapperTime\":\"TaskList_wrapperTime__8G5OK\",\"TextTime\":\"TaskList_TextTime__+bmHo\",\"wrapperTaskDesc\":\"TaskList_wrapperTaskDesc__aiJlW\",\"IMGUserTask\":\"TaskList_IMGUserTask__KmlMK\",\"UserPhoto\":\"TaskList_UserPhoto__xIQhe\",\"TaskPriority\":\"TaskList_TaskPriority__mqiJk\",\"wrapperIcon\":\"TaskList_wrapperIcon__ooMNw\",\"btn\":\"TaskList_btn__sQgR9\"};","// extracted by mini-css-extract-plugin\nexport default {\"WrapperText\":\"PriorituList_WrapperText__36Rj8\",\"fade-in\":\"PriorituList_fade-in__+4y9b\",\"WrapperTextLight\":\"PriorituList_WrapperTextLight__vnXQs\",\"Text\":\"PriorituList_Text__m1kmE\",\"TextLight\":\"PriorituList_TextLight__JZWuN\",\"btn\":\"PriorituList_btn__UIH9Q\",\"btnLight\":\"PriorituList_btnLight__tky1H\",\"loader\":\"PriorituList_loader__8AeZB\",\"load-loop\":\"PriorituList_load-loop__v9TAQ\"};","import { TbArrowsExchange2 } from 'react-icons/tb';\nimport Style from './PriorituList.module.scss';\nimport { MdOutlineClose } from 'react-icons/md';\nimport { IconContext } from 'react-icons';\nimport { edit } from '../../redux/task/task-operation.js';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTask } from '../../redux/task/task-selectors';\n\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nexport const PriorityLisk = ({ progress, setChangePriority, id }) => {\n  const dispatch = useDispatch();\n    const { loading } = useSelector(getTask);\n    const theme = useSelector(state => state.theme.value);\n    const [secondRender, setSecondRender] = useState(false)\n    \n    useEffect(() => {\n    if (!loading && secondRender) {\n        setChangePriority(false);\n        }\n    }, [loading, setChangePriority,secondRender]);\n  let progres;\n  let progres2;\n  if (progress === 'to-do') {\n    progres = 'In-Progress';\n    progres2 = 'Done';\n  } else if (progress === 'in-progress') {\n    progres = 'To-do';\n    progres2 = 'Done';\n  } else if (progress === 'done') {\n    progres = 'To-do';\n    progres2 = 'in-progress';\n  }\n    const hendlSubmitFirst = () => {\n      setSecondRender(true)\n    const task = {\n      progress: progres.toLowerCase(),\n    };\n    dispatch(edit({ id, task }));\n\n  };\n    const hendlSubmitSecond = () => {\n      setSecondRender(true)\n    const task = {\n      progress: progres2.toLowerCase(),\n    };\n    dispatch(edit({ id, task }));\n\n  };\n  return (\n    <div className={theme ? Style.WrapperTextLight : Style.WrapperText}>\n      {!loading ? <><button className={ theme ? Style.btnLight : Style.btn} onClick={() => setChangePriority(false)}>\n        <IconContext.Provider value={{ size: '20px' }}>\n          <MdOutlineClose />\n        </IconContext.Provider>\n      </button>\n      <button className={theme ? Style.TextLight : Style.Text} onClick={hendlSubmitFirst}>\n        <p>{progres}</p>{' '}\n        <IconContext.Provider value={{ size: '20px' }}>\n          <TbArrowsExchange2 />{' '}\n        </IconContext.Provider>\n      </button>\n      <button className={theme ? Style.TextLight : Style.Text} onClick={hendlSubmitSecond}>\n        <p>{progres2}</p>{' '}\n        <IconContext.Provider value={{ size: '20px' }}>\n          <TbArrowsExchange2 />{' '}\n        </IconContext.Provider>\n      </button></>: <div className={Style.loader}>Loading...</div>}\n      \n    </div>\n  );\n};\n","import Style from './TaskList.module.scss';\nimport { IconContext } from 'react-icons';\nimport { TbArrowsExchange2 } from 'react-icons/tb';\nimport { CiEdit } from 'react-icons/ci';\nimport { BsTrash } from 'react-icons/bs';\nimport { getTask } from '../../redux/task/task-selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { delTask } from \"../../redux/task/task-operation\"\nimport { TaskForm } from \"../TaskForm/TaskForm\"\nimport { useState } from 'react';\nimport {PriorityLisk} from \"../PriorityList/PriorityList\"\n\nimport { getUser } from '../../redux/auth/auth-selectors';\nexport const TaskList = ({ date, currentProgress }) => {\n  const dispatch = useDispatch();\n  const [openTaskId, setOpenTaskId] = useState(null);\n  const [changePriority, setChangePriority] = useState(null);\n  const { items } = useSelector(getTask);\n  const theme = useSelector(state => state.theme.value);\nconst User = useSelector(getUser);\n  const currentDate = new Date();\n  const day = currentDate.getDate(); \n  const month = (currentDate.getMonth() + 1); \n  const year = currentDate.getFullYear();\n  if (!date.day) {\n    date = {\n      day: day,\n      month: month,\n      year: year,\n    }\n  }\n  const elements = items.filter(({ day, progress }) => {\n    return Number(day) === date.day && progress === currentProgress;\n  });\n  const classPriority = priority => {\n    if (priority === 'Low') {\n      return 'lowStyleText';\n    } else if (priority === 'Medium') {\n      return 'mediumStyleText';\n    } else if (priority === 'High') {\n      return 'highStyleText';\n    }\n  };\n  return (\n    <div className={theme ? Style.allTask : Style.allTaskDark}>\n      {elements.map(({ title, timeStart, timeEnd, priority, _id, progress, day, month, year}) => {\n      const isOpen = openTaskId === _id;\n      const isOpenPrior = changePriority === _id;\n        return (\n          <div key={_id} className={theme ? Style.TaskWrapper : Style.TaskWrapperDark}>\n            <p className={Style.TitlTask}>{title}</p>\n            <div className={Style.wrapperTime}>\n              <p className={Style.TextTime}>Start: {timeStart}</p>\n              <p className={Style.TextTime}>End: {timeEnd}</p>\n            </div>\n            <div className={Style.wrapperTaskDesc}>\n              <div className={Style.IMGUserTask}>\n                {User.avatarURL && <img className={Style.UserPhoto} src={User.avatarURL} alt=\"UserPhoto\"/>}\n              </div>\n              <p className={classPriority(priority)}>{priority}</p>\n              <div className={Style.wrapperIcon}>\n                <IconContext.Provider\n                  value={{ size: '17px', color: theme ? 'black' : 'white' }}\n                >\n                  <button className={Style.btn} onClick={() => setChangePriority(_id)}>\n                    <TbArrowsExchange2 />\n                    </button>\n                  <button className={Style.btn} onClick={() => {setOpenTaskId(_id)}}>\n                    <CiEdit />\n                  </button>\n                </IconContext.Provider>\n                <IconContext.Provider\n                  value={{ size: '15px', color: theme ? 'black' : 'white' }}\n                >\n                  <button className={Style.btn} onClick={() =>  dispatch(delTask(_id))}>\n                    <BsTrash />\n                  </button>\n                 \n                </IconContext.Provider>\n              </div>\n            </div>\n            {isOpen && <TaskForm setTaskModal={setOpenTaskId} id={_id} progress={progress} day={day} titleText={title} Priority={priority} TimeStart={timeStart} TimeEnd={timeEnd} month={month} year={year} editTask={true} />}\n            {isOpenPrior && <PriorityLisk progress={progress} setChangePriority={setChangePriority} id={_id}/>}\n          </div>\n          \n        );\n      })}\n    </div>\n  );\n};\n","import Style from './ColumnHeadBar.module.scss';\n\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {TaskForm} from \"../TaskForm/TaskForm\"\n\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport { HiOutlinePlusCircle } from 'react-icons/hi';\n\nimport { useMediaQuery } from 'react-responsive';\nimport {TaskList} from \"../TaskList/TaskList\"\nimport { Scrollbar } from 'swiper';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/scrollbar';\n\n\nexport const ColumnHeadBar = (day) => {\n\n  const [taskModal, setTaskModal] = useState(false)\n  const [progress, setProgress] = useState();\n\n  const theme = useSelector(state => state.theme.value);\n\n    const isMediumScreen = useMediaQuery({ minWidth: 320, maxWidth: 767 });\n    const phoneTablet = useMediaQuery({ maxWidth: 1299 });\n    const isLargeScreen = useMediaQuery({minWidth: 1300})\n    \n  const handleOpenModal = (e) => {\n    setProgress(e.target.name)\n\n  setTaskModal(true)\n  \n  }\n\n  return (\n    <section className={theme ? Style.ColumnHeadBar : Style.ColumnHeadBarDark}>\n      {phoneTablet && <Swiper\n        modules={[Scrollbar]}\n        spaceBetween={36}\n        slidesPerView={isMediumScreen ? 1 : 2}\n        scrollbar={{ draggable: isLargeScreen ? false : true }}\n\n      >\n        <SwiperSlide >\n          <div className={theme ? Style.wrapperTask : Style.wrapperTaskDark}>\n            <div className={Style.wrappertitle}>\n              <p className={theme ? Style.taskTitle : Style.taskTitleDark}>\n                To do\n              </p>\n              <IconContext.Provider\n                value={{ size: '30px', color: !theme ? 'white' : 'black' }}\n              >\n                <HiOutlinePlusCircle />\n              </IconContext.Provider>\n            </div>\n            <div>\n            <TaskList date={day} currentProgress=\"to-do\" /></div>\n            <button onClick={handleOpenModal} className={theme ? Style.taskBtn : Style.taskBtnDark} name='to-do'>\n              <IconContext.Provider value={{ size: '20px' }}>\n                <AiOutlinePlus />\n              </IconContext.Provider>\n              Add Task\n            </button>\n          </div>\n        </SwiperSlide>\n        <SwiperSlide>\n          <div className={theme ? Style.wrapperTask : Style.wrapperTaskDark}>\n            <div className={Style.wrappertitle}>\n              <p className={theme ? Style.taskTitle : Style.taskTitleDark}>\n                In progress\n              </p>\n              <IconContext.Provider\n                value={{ size: '30px', color: !theme ? 'white' : 'black' }}\n              >\n                <HiOutlinePlusCircle />\n              </IconContext.Provider>\n            </div>\n            <TaskList date={day} currentProgress=\"in-progress\" />\n            <button onClick={handleOpenModal} className={theme ? Style.taskBtn : Style.taskBtnDark} name='in-progress'>\n              <IconContext.Provider value={{ size: '20px' }}>\n                <AiOutlinePlus />\n              </IconContext.Provider>\n              Add Task\n            </button>\n          </div>\n        </SwiperSlide>\n        <SwiperSlide>\n          <div className={theme ? Style.wrapperTask : Style.wrapperTaskDark}>\n            <div className={Style.wrappertitle}>\n              <p className={theme ? Style.taskTitle : Style.taskTitleDark}>\n                Done\n              </p>\n              <IconContext.Provider\n                value={{ size: '30px', color: !theme ? 'white' : 'black' }}\n              >\n                <HiOutlinePlusCircle />\n              </IconContext.Provider>\n            </div>\n            <TaskList date={day} currentProgress=\"done\" />\n            <button onClick={handleOpenModal} className={theme ? Style.taskBtn : Style.taskBtnDark} name='done'>\n              {' '}\n              <IconContext.Provider value={{ size: '20px' }}>\n                <AiOutlinePlus />\n              </IconContext.Provider>\n              Add Task\n            </button>\n          </div>\n        </SwiperSlide>\n          </Swiper>}\n          \n          {isLargeScreen &&  <><div className={theme ? Style.wrapperTask : Style.wrapperTaskDark}>\n            <div className={Style.wrappertitle}>\n              <p className={theme ? Style.taskTitle : Style.taskTitleDark}>\n                To do\n              </p>\n              <IconContext.Provider\n                value={{ size: '30px', color: !theme ? 'white' : 'black' }}\n              >\n                <HiOutlinePlusCircle />\n              </IconContext.Provider>\n            </div>\n        <TaskList date={day} currentProgress=\"to-do\" />\n            <button onClick={handleOpenModal} className={theme ? Style.taskBtn : Style.taskBtnDark} name='to-do'>\n              <IconContext.Provider value={{ size: '20px' }}>\n                <AiOutlinePlus />\n              </IconContext.Provider>\n              Add Task\n            </button>\n          </div>\n          <div className={theme ? Style.wrapperTask : Style.wrapperTaskDark}>\n            <div className={Style.wrappertitle}>\n              <p className={theme ? Style.taskTitle : Style.taskTitleDark}>\n                In progress\n              </p>\n              <IconContext.Provider\n                value={{ size: '30px', color: !theme ? 'white' : 'black' }}\n              >\n                <HiOutlinePlusCircle />\n              </IconContext.Provider>\n            </div>\n            <TaskList date={day} currentProgress=\"in-progress\" />\n            <button onClick={handleOpenModal} className={theme ? Style.taskBtn : Style.taskBtnDark}  name='in-progress'>\n              <IconContext.Provider value={{ size: '20px' }}>\n                <AiOutlinePlus />\n              </IconContext.Provider>\n              Add Task\n            </button>\n        </div>\n        \n              <div className={theme ? Style.wrapperTask : Style.wrapperTaskDark}>\n            <div className={Style.wrappertitle}>\n              <p className={theme ? Style.taskTitle : Style.taskTitleDark}>\n                Done\n              </p>\n              <IconContext.Provider\n                value={{ size: '30px', color: !theme ? 'white' : 'black' }}\n              >\n                <HiOutlinePlusCircle />\n              </IconContext.Provider>\n            </div>\n          <TaskList date={day} currentProgress=\"done\" />\n            <button onClick={handleOpenModal} className={theme ? Style.taskBtn : Style.taskBtnDark} name='done'>\n              {' '}\n               <IconContext.Provider value={{ size: '20px' }}>\n                <AiOutlinePlus />\n              </IconContext.Provider>\n              Add Task\n            </button>\n          </div>\n              </>\n      }\n      {taskModal && <TaskForm setTaskModal={setTaskModal} progress={progress} day={day.day} month={day.month} year={day.year}/>}\n    </section>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Style from './Calendar.module.scss';\nimport { getDaysInMonth } from './CalendarCalculations/CalendarCalculations';\nimport { DayToolbar } from '../DayToolbar/DayToolbar';\nimport { DayToolbarDetail } from '../DayToolbar/DayToolbarDetail/DayToolbarDetail';\nimport { NavLink } from 'react-router-dom';\nimport { ColumnHeadBar } from '../ColumnHeadBar/ColumnHeadBar';\nimport { getTask } from '../../redux/task/task-selectors';\nimport {Loader} from \"../Loader/Loader\"\nimport { IoIosArrowForward } from 'react-icons/io';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { IconContext } from 'react-icons';\nimport { taskMonth } from '../../redux/task/task-operation';\n\nexport const CalendarComponent = () => {\n  const dispatch = useDispatch();\n\n  const { items,loading } = useSelector(getTask);\n  const [dayDetail, setDayDetail] = useState(false);\n  const [day, setDay] = useState();\n  const [Month, setMonth] = useState();\n  const [Year, setYear] = useState();\n  const [currentBtnMonth, setCurrentBtnMonth] = useState(true);\n  const theme = useSelector(state => state.theme.value);\n\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const year = currentMonth.getFullYear();\n  const month = currentMonth.getMonth();\n\n  useEffect(() => {\n    dispatch(\n      taskMonth({\n        month: (currentMonth.getMonth() + 1).toString(),\n        year: currentMonth.getFullYear().toString(),\n      })\n    );\n  }, [dispatch, currentMonth]);\n\n  const generateCalendar = () => {\n    const calendar = [];\n    const today = new Date();\n    const daysInMonth = getDaysInMonth(year, month);\n    const firstDayOfMonth = new Date(year, month, 1).getDay();\n    const lastDayOfMonth = new Date(year, month, daysInMonth).getDay();\n\n    const hendleClickDay = (i, month) => {\n      setDayDetail(prevState => !prevState);\n      setDay(i);\n      setMonth(month);\n      setYear(year);\n    };\n\n    // Добавление пустых колонок перед началом месяца\n    for (let i = 0; i < firstDayOfMonth - 1; i++) {\n      calendar.push(\n        <div\n          className={\n            theme\n              ? `${Style.calendarColumn} ${Style.empty}`\n              : `${Style.calendarColumn} ${Style.emptyDark}`\n          }\n          key={`empty-start-${i}`}\n        />\n      );\n    }\n\n    // Добавление колонок с числами месяца\n    for (let i = 1; i <= daysInMonth; i++) {\n      const isToday =\n        today.getFullYear() === year &&\n        today.getMonth() === month &&\n        today.getDate() === i;\n\n      const isDarkTheme = theme\n        ? `${Style.calendarColumn}`\n        : Style.calendarColumnDark;\n      const columnClassName = isToday\n        ? `${isDarkTheme} ${Style.today}`\n        : isDarkTheme;\n\n      calendar.push(\n        <div\n          className={columnClassName}\n          key={i}\n          onClick={() => hendleClickDay(i, month)}\n        >\n          <p\n            className={\n              theme ? Style.calendarColumnText : Style.calendarColumnTextDark\n            }\n          >\n            {i}\n          </p>\n          {items.find(({ day }) => Number(day) === i) && (\n            <div\n              className={\n                items.find(({ day }) => Number(day) === i)?.priority || ''\n              }\n            >\n              {items.find(({ day }) => Number(day) === i).title}\n            </div>\n          )}\n          {items.filter(({ day }) => Number(day) === i).length > 1 && (\n            <div className={Style.TaskNumber}>\n              See all +{items.filter(({ day }) => Number(day) === i).length - 1}\n            </div>\n          )}\n        </div>\n      );\n    }\n\n    // Добавление пустых колонок после окончания месяца\n    for (let i = lastDayOfMonth - 2; i <= 6; i++) {\n      calendar.push(\n        <div\n          className={\n            theme\n              ? `${Style.calendarColumn} ${Style.empty}`\n              : `${Style.calendarColumn} ${Style.emptyDark}`\n          }\n          key={`empty-end-${i}`}\n        />\n      );\n    }\n\n    return calendar;\n  };\n\n  const previousMonth = () => {\n    setCurrentMonth(\n      new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1)\n    );\n  };\n\n  const nextMonth = () => {\n    setCurrentMonth(\n      new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1)\n    );\n  };\n\n  return (\n    <>\n      <div className={Style.calendar}>\n        <div className={Style.calendarHeader}>\n          <h2>\n            {/* {currentMonth.toLocaleString('default', {\n              month: 'long',\n              year: 'numeric',\n            })} */}\n          </h2>\n\n          <div className={theme ? Style.BtnWrapper : Style.BtnWrapperDark}>\n            <button\n              className={theme ? Style.Prevebtn : Style.PrevbtnDark}\n              onClick={previousMonth}\n            >\n              <IconContext.Provider value={{ size: '16px' }}>\n                <IoIosArrowBack />\n              </IconContext.Provider>\n            </button>\n            <button\n              className={theme ? Style.Nextbtn : Style.NextbtnDark}\n              onClick={nextMonth}\n            >\n              <IconContext.Provider value={{ size: '16px' }}>\n                <IoIosArrowForward />\n              </IconContext.Provider>\n            </button>\n          </div>\n          <div className={Style.btnChangeWrapper}>\n            <button\n              className={\n                theme\n                  ? currentBtnMonth\n                    ? Style.btnChangeMonthCurrentLight\n                    : Style.btnChangeMonth\n                  : currentBtnMonth\n                  ? Style.btnChangeMonthCurrent\n                  : Style.btnChangeMonthDark\n              }\n              onClick={() => {\n                setDayDetail(false);\n                setDay(null);\n                setMonth(null);\n                setCurrentBtnMonth(true);\n              }}\n            >\n              Month\n            </button>\n            <button\n              className={\n                theme\n                  ? !currentBtnMonth\n                    ? Style.btnChangeDayCurrentLight\n                    : Style.btnChangeDay\n                  : !currentBtnMonth\n                  ? Style.btnChangeDayCurrent\n                  : Style.btnChangeDayDark\n              }\n              onClick={() => {\n                setDayDetail(true);\n                setCurrentBtnMonth(false);\n              }}\n            >\n              Day\n            </button>\n          </div>\n        </div>\n\n        {!dayDetail ? (<>\n          <DayToolbar />\n          <NavLink to=\"/calendar/task\">\n            <div className={Style.calendarColumns}>{generateCalendar()}</div>\n          </NavLink></>\n        ) : (<>\n          <DayToolbarDetail\n        day={day}\n        month={Month}\n        setCurrentBtnMonth={setCurrentBtnMonth}\n        setDayDetail={setDayDetail} \n            />\n            <ColumnHeadBar day={day} month={Month + 1} year={Year} />\n            </>\n        )}\n        {loading && <Loader/>}\n      </div>\n    </>\n  );\n};\n","import Style from './MainLayout.module.scss';\nimport { useSelector } from 'react-redux';\nimport {SideBar} from \"../SideBar/SideBar\"\nimport { CalendarComponent } from '../../components/Calendar/Calendar';\n const MainLayout = () => {\n  const theme = useSelector(state => state.theme.value);\n  return (\n    <>\n      <SideBar/>\n      <div className={Style.Wrapper}>\n        <section\n          className={\n            theme === true\n              ? Style.wrapperBGAuthPage\n              : Style.wrapperBGAuthPageDark\n          }\n        >\n          <div className=\"container\">\n            <CalendarComponent />\n          </div>\n        </section>\n      </div>\n    </>\n  );\n};\nexport default MainLayout"],"names":["Date","DayToolbar","element","theme","useSelector","state","value","isMediumScreen","useMediaQuery","minWidth","maxWidth","isLargeScreen","className","Style","DayToolbarDetail","day","month","setCurrentBtnMonth","useState","selectedDay","setSelectedDay","getDate","getMonth","currentDate","weekDates","year","getFullYear","daysInMonth","getDaysInMonth","date","dayOfWeek","getDay","monday","setDate","i","nextDay","push","formattedDates","map","formatDayOfWeek","getDateOfWeek","onClick","handleDateClick","getTask","tasks","items","loading","LoaderTask","setTaskModal","useEffect","timer","setTimeout","clearTimeout","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","TaskForm","id","progress","titleText","Priority","TimeStart","TimeEnd","editTask","dispatch","useDispatch","modalRoot","document","getElementById","send","setSend","title","setTitle","timeStart","setTimeStart","timeEnd","setTimeEnd","priority","setPriority","required","setRequired","createPortal","size","type","placeholder","onChange","e","target","defaultValue","htmlFor","name","checked","preventDefault","prevState","task","toString","edit","addTask","PriorityLisk","progres","progres2","setChangePriority","secondRender","setSecondRender","toLowerCase","TaskList","currentProgress","openTaskId","setOpenTaskId","changePriority","User","getUser","elements","filter","Number","classPriority","_id","isOpen","isOpenPrior","avatarURL","src","alt","color","delTask","ColumnHeadBar","taskModal","setProgress","phoneTablet","handleOpenModal","modules","Scrollbar","spaceBetween","slidesPerView","scrollbar","draggable","CalendarComponent","dayDetail","setDayDetail","setDay","Month","setMonth","Year","setYear","currentBtnMonth","currentMonth","setCurrentMonth","taskMonth","to","calendar","today","firstDayOfMonth","lastDayOfMonth","isToday","isDarkTheme","columnClassName","hendleClickDay","find","length","generateCalendar","Loader","SideBar"],"sourceRoot":""}